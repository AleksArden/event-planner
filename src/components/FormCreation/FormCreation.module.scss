@import 'styles/_global-vars.scss';
@import 'styles/_placeholder.scss';
@import 'styles/_mixins.scss';

.form {
  width: 100%;
  padding: 40px 16px;

  border-radius: 8px;
  background-color: getBackgroundColor('primary');

  box-shadow: getShadow('main');
  @include mq(tab) {
    padding: 40px 40px;
  }
}

.labelWrapper {
  @include flexed(flex-start);
  flex-direction: column;
  flex-wrap: wrap;
  gap: 24px;

  margin-bottom: 24px;
  @include mq(tab) {
    height: 508px;
  }
  @include mq(desk) {
    height: 282px;
    margin-bottom: 60px;
    gap: 24px 42px;
  }
}
.label {
  position: relative;

  display: block;

  color: getColor('primary');

  font-family: getFont('Primary');
  font-size: 16px;
  font-weight: 400;
  line-height: 16px;
  letter-spacing: 0.4px;
  text-align: left;
}
.input {
  @extend %inputCreate;

  transition: border-color getAnimation('animation');

  &:focus {
    border-color: getColor('primary');
  }
}
.inputError {
  @extend %inputCreate;
  border-color: getColor('error');
}
.textarea {
  @extend %inputCreate;
  height: 156px;
  resize: none;

  transition: border-color getAnimation('animation');

  &:focus {
    border-color: getColor('primary');
  }
}
.textareaError {
  @extend %inputCreate;
  height: 156px;
  resize: none;

  border-color: getColor('error');
}
.inputNone {
  display: none;
}
.wrapper {
  @extend %inputCreate;
  overflow: scroll;

  transition: border-color getAnimation('animation');

  &:focus {
    border-color: getColor('primary');
  }
}
.wrapperError {
  @extend %inputCreate;
  border-color: getColor('error');
  overflow: scroll;
}
.text {
  width: 200px;

  overflow: scroll;
  font-size: 16px;
  font-weight: 400;
  line-height: 30px;
  letter-spacing: 0px;
  @include mq(tab) {
    width: 254px;
  }
}

.buttonIcon {
  position: absolute;
  top: 38px;
  right: 12px;

  background-color: getBackgroundColor('primary');

  transition: background-image getAnimation('animation');

  .iconRemoveInputPlaceholder {
    @extend %icon;
    background-image: getIcon('remove-input-placeholder');
  }
  .iconRemoveInputError {
    @extend %icon;
    background-image: getIcon('remove-input-error');
  }
  .input:focus-visible + & {
    .iconRemoveInputPlaceholder {
      background-image: getIcon('remove-input');
    }
  }
  .textarea:focus-visible + & {
    .iconRemoveInputPlaceholder {
      background-image: getIcon('remove-input');
    }
  }
}
.btnWrapper {
  @include mq(tab) {
    @include flexed(null, flex-end);
  }
}
.button {
  width: 240px;
  height: 56px;
  padding: 16px 12px 16px 12px;

  border-radius: 8px;
  color: getColor('white');
  background-color: getColor('primary');

  box-shadow: getShadow('main');

  font-family: getFont('primary');
  font-size: 16px;
  font-weight: 500;
  line-height: 1.5;
  text-align: center;

  transition: background-color getAnimation('animation');

  @include mq(tab) {
    width: 193px;
  }

  &:hover,
  &:focus {
    background-color: getColor('hover');
  }
}
.error {
  position: absolute;
  right: 15px;
  bottom: -20px;

  color: getColor('error');

  font-size: 12px;
  font-weight: 400;
  line-height: 1.33;
  letter-spacing: 0px;
  text-align: right;
}
